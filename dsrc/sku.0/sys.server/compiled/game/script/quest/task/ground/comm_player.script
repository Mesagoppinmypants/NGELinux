include library.groundquests;
include library.utils;

// ---------------------------------------------------------------------

inherits quest.task.ground.base_task;

// ---------------------------------------------------------------------

const String dataTableColumnCommMessageText             = "COMM_MESSAGE_TEXT";
const String dataTableColumnNPCAppearanceServerTemplate = "NPC_APPEARANCE_SERVER_TEMPLATE";

const String taskType = "comm_player";

// ---------------------------------------------------------------------

//fires when this task is added to the player
trigger OnTaskActivated(int questCrc, int taskId)
{

	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskActivated", taskType + " task activated.");
	//instantly complete
	questCompleteTask(questCrc, taskId, self);
	return super.OnTaskActivated(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

//fires when the task is completed
trigger OnTaskCompleted(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskCompleted", taskType + " task completed.");

	//gather data for this task
	String message    = groundquests.getTaskStringDataEntry(questCrc, taskId, dataTableColumnCommMessageText);
	String appearance = groundquests.getTaskStringDataEntry(questCrc, taskId, dataTableColumnNPCAppearanceServerTemplate);

	prose_package pp = new prose_package ();
	pp.stringId      = utils.unpackString(message);

	commPlayer(self, self, pp, appearance);	

	return super.OnTaskCompleted(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

//fires when the task is completed
trigger OnTaskFailed(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskFailed", taskType + " task failed.");
	return super.OnTaskFailed(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

//fires when the task is cleared
trigger OnTaskCleared(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskCleared", taskType + " task cleared.");
	return super.OnTaskCleared(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

trigger OnDetach()
{
	//make sure the base objvar is removed
	removeObjVar(self, groundquests.getTaskTypeObjVar(self, taskType));
	return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------
