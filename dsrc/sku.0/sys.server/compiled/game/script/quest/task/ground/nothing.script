include library.groundquests;

// ---------------------------------------------------------------------

inherits quest.task.ground.base_task;

// ---------------------------------------------------------------------

const String taskType = "nothing";

// ---------------------------------------------------------------------

trigger OnTaskActivated(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskActivated", taskType + "task entered.");
	questCompleteTask(questCrc, taskId, self);
	return super.OnTaskActivated(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

//fires when the task is completed
trigger OnTaskCompleted(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskCompleted", taskType + "task completed.");
	return super.OnTaskCompleted(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

//fires when the task is completed
trigger OnTaskFailed(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskFailed", taskType + "task failed.");
	return super.OnTaskFailed(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

trigger OnTaskCleared(int questCrc, int taskId)
{
	groundquests.questOutputDebugInfo(self, questCrc, taskId, taskType, "OnTaskCleared", taskType + " task cleared.");
	return super.OnTaskCleared(self, questCrc, taskId);
}

// ---------------------------------------------------------------------

trigger OnDetach()
{
	//make sure the base objvar is removed
	removeObjVar(self, groundquests.getTaskTypeObjVar(self, taskType));
	return SCRIPT_CONTINUE;
}

// ---------------------------------------------------------------------
